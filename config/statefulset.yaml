apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  labels:
    app: keycloak-ha
spec:
  selector:
    matchLabels:
      app: keycloak-ha
  replicas: 1
  serviceName: keycloak-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: keycloak-ha
    spec:
      restartPolicy: Always
      serviceAccountName: default
      imagePullSecrets:
      - name: registry
      securityContext:
        fsGroup: 1000
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:17.0.1
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          command:
            - /opt/keycloak/bin/kc.sh
          args:
            - --verbose
            - -cf /opt/keycloak/conf/keycloak.conf
            - start
            - --auto-build
            - --cache-stack kubernetes
            - --db=postgres
            - --http-enabled=true
          env:
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
            - name: KEYCLOAK_PASSWORD_FILE
              value: /secrets/password
            - name: KC_DB_URL_HOST
              value: "127.0.0.1"
            - name: KC_DB_PORT
              value: "5432"
            - name: KC_DB_URL_DATABASE
              value: "keycloak"
            - name: KC_DB_USERNAME
              value: "keycloak"
            - name: KC_DB_PASSWORD
              value: keycloak
            - name: JAVA_OPTS
              value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=70.0 -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: jgroups
              containerPort: 7600
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 120
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /realms/master
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 1
      terminationGracePeriodSeconds: 60